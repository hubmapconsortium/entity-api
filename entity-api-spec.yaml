openapi: 3.0.0
info:
  description: |
    This is the HuBMAP Entity APIs specification
    [http://www.hubmap.org](http://www.hubmap.org)
  version: "1.0.0-oas3"
  title: HuBMAP Entity APIs
  termsOfService: "http://www.hubmap.org"
  contact:
    email: apiteam@hubmap.org
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: dataset
    description: Operations about dataset
    externalDocs:
      description: Find out more about our dataset
      url: "http://swagger.io"
  - name: entity
    description: Operations about entity
    externalDocs:
      description: Find out more about our store
      url: "http://swagger.io"
paths:
  /entities/types:
    get:
      tags:
        - entity
      summary: Get Entity Types
      operationId: getEntityTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityType"
        "400":
          description: Invalid dataset Id
        "401":
          description: User is not authorized to look for entities
        "404":
          description: Dataset not found
  "/entities/types/{type_code}":
    get:
      tags:
        - entity
      summary: Get Entities by type code
      operationId: getEntityByType
      parameters:
        - name: type_code
          in: path
          description: code of type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Entity"
        "400":
          description: Invalid dataset Id
        "401":
          description: User is not authorized to look for entities
        "404":
          description: Dataset not found
  /entities/samples:
    get:
      tags:
        - entity
      summary: Get Entity Types
      operationId: getEntityBySampleType
      parameters:
        - in: query
          name: sample_type
          description: a sample type code
          required: true
          schema:
            type: string
        - in: query
          name: organ_type
          description: a organ type code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityType"
        "400":
          description: Invalid dataset Id
        "401":
          description: User is not authorized to look for entities
        "404":
          description: Dataset not found
  "/entityes/{uuid}":
    get:
      tags:
        - entity
      summary: Get Entity
      operationId: getEntity
      parameters:
        - name: uuid
          in: path
          description: The unique UUID id of entity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityType"
        "400":
          description: Invalid dataset Id
        "401":
          description: User is not authorized to look for entities
        "404":
          description: Dataset not found
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
servers:
  - url: "https://virtserver.swaggerhub.com/etlds/Entity/1.0.0"
  - url: "http://virtserver.swaggerhub.com/etlds/Entity/1.0.0"
components:
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
          scopes:
            "write:pets": modify pets in your account
            "read:pets": read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    Entity:
      type: object
    EntityType:
      type: object
