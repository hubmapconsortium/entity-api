############################################# Rules #############################################
# - By default, the schema treats all entity properties as optional. Use `user_input_required: true` to mark a property as user_input_required
# - By default, the schema treats all entity properties as mutable. Use `immutable: true` to mark a property as immutable
# - By default, the schema treats all entity properties as persistent. Use `transient: true` to mark a property as transient
# - By default, the schema treats all entity properties as they have no triggers. Specify the trigger methods if needed

# - By default, the schema treats all entity properties as `exposed: true`. 
# - By default, the schema treats all entity properties as `generated: false`, meaning they need to be provided by user from input

# - If a property is marked as `user_input_required: true`, it means this property is required to be provided in the client request JSON
# - If a property is marked as `user_input_required: true`, it can't have `trigger` at the same time
# - If a property is marked as `generated: true`, user input is not allowed since it'll be generated
# - If a property is marked as `exposed: flase`, it'll be filtered from the response
# - There are 3 types of triggers: `before_create_trigger`, `before_update_trigger`, and `on_read_trigger`
# - If a property has one of the triggers, it can't be used in client request JSON
# - If a property has `on_read_trigger`, it must be transient, meaning it's not stored in neo4j and only available during response


# Properties that are still stored in neo4j but no longer needed: protocol_file, protocol_info

############################################# TO-DO #############################################
# Do we want to have both the ancestor and source_uuid at the same time?


# Shared properties across ACTIVITIES and ENTITIES
shared_properties: &shared_properties
  ###### Creation info properties ######
  created_timestamp:
    type: integer
    generated: true # disallow user input from request
    immutable: true
    description: "The timestamp of when the node was created.  The format is an integer representing milliseconds since midnight Jan 1, 1970"
    before_create_trigger: set_timestamp
  created_by_user_displayname:
    type: string
    generated: true
    immutable: true
    description: "The name of the person or process authenticated when creating the object"
    before_create_trigger: set_user_displayname
  created_by_user_email:
    type: string
    generated: true
    immutable: true
    description: "The email address of the person or process authenticated when creating the object."
    before_create_trigger: set_user_email
  created_by_user_sub:
    type: string
    generated: true
    immutable: true
    description: "The subject id as provided by the authorization mechanism for the person or process authenticated when creating the object."
    before_create_trigger: set_user_sub
  ###### ID properties ######
  uuid:
    type: string
    generated: true
    description: "The HuBMAP unique identifier, intended for internal software use only.  This is a 32 digit hexadecimal uuid e.g. 461bbfdc353a2673e381f632510b0f17"
    before_create_trigger: set_uuid
    immutable: true
  hubmap_id:
    type: string
    generated: true
    description: "E.g., HBM###.XXXX.###.  A HuBMAP specific id "
    immutable: true
    before_create_trigger: set_hubmap_id


####################################################################################################
## Activities
####################################################################################################

ACTIVITIES:
  Activity:
    properties:
      <<: *shared_properties
      creation_action:
        type: string
        generated: true
        description: "The activity that was performed."
        immutable: true
        before_create_trigger: set_activity_creation_action


####################################################################################################
## Entities
####################################################################################################

shared_entity_properties: &shared_entity_properties 
  ###### DOI properties ######
  registered_doi:
    type: string
    immutable: true
    description: "The doi of the registered entity. e.g. 10.35079/hbm289.pcbm.487"
  doi_url:
    type: string
    immutable: true
    description: "The url from the doi registry for this entity. e.g. https://doi.org/10.35079/hbm289.pcbm.487"

  ###### Last Modified Properties #######
  last_modified_timestamp:
    type: integer
    generated: true
    before_update_trigger: set_timestamp
    description: "The timestamp of when the object was last modified.  The format is an integer representing milliseconds since midnight, Jan 1, 1970"
  last_modified_user_sub:
    type: string
    generated: true
    before_update_trigger: set_user_sub
    description: "The subject id as provided by the authorization mechanism for the person or process authenticated when the object was modified."
  last_modified_user_email:
    type: string
    generated: true
    before_update_trigger: set_user_email
    description: "The email address of the person or process authenticated when the object was last modified."
  last_modified_user_displayname:
    type: string
    generated: true
    before_update_trigger: set_user_displayname
    description: "The name of the person or process authenticated when the object was last modified."
  ###### Shared transient properties ######
  data_access_level:
    transient: true
    type: string
    generated: true
    description: "One of the values: public, consortium, protected. Only Dataset may have protected value"
    on_read_trigger: get_data_access_level
  ###### All other shared properties ######
  entity_class:
    type: string
    generated: true
    description: "One of the normalized entity types: Dataset, Collection, Sample, Donor"
    immutable: true
    before_create_trigger: set_entity_class 
  # Currently cretors and contacts are only available for Collection
  creators:
    type: list
    description: "A list of the people who created the entity with full name, email, ORCID iD, institution, etc.. This is analogus to the author list on a publication."
  contacts:
    type: list 
    description: "A list of the people who are the main contacts to get information about the entity."
  # To-DO
  # creator_ids:
  #   type: list
  #   immutable: true
  #   description: "A list of ids (will need to decide on uuid or orcid id) referencing the people who created the entity"
  # contact_ids:
  #   type: list
  #   description: "A list of ids (will need to decide on uuid or orcid id) referencing the people who are the main contacts about this entity"
  

ENTITIES:
  ############################################# Collection #############################################
  Collection:
    # Collection can not be derivation source nor target
    derivation:
      source: false
      target: false
    properties:
      <<: *shared_properties
      <<: *shared_entity_properties
      title:
        user_input_required: true
        type: string
      has_doi:
        type: boolean
        description: "True if the entity has a doi registered for it, false otherwise."
      ###### Transient properties ######
      dataset_uuids:  #used only to pass the reference to linked datasets in on a PUT/POST 
        transient: true
        type: list
        description: "A list of dataset uuids that belong to this collection.  This field is used to pass the set of datasets contained in the collection in on a PUT or POST"
        after_create_trigger: link_collection_to_datasets
        after_update_trigger: link_collection_to_datasets
        # Joe added
        on_read_trigger: get_collection_dataset_uuids
      datasets:
        transient: true
        generated: true
        type: list #list of datasets
        description: "The datasets that are contained in the collection."
        on_read_trigger: get_collection_datasets

  ############################################# Dataset #############################################
  Dataset:
    # Dataset can be either derivation source or target
    derivation:
      source: true
      target: true
    properties:
      <<: *shared_properties
      <<: *shared_entity_properties
      title:
        user_input_required: true
        type: string
        description: "The dataset title."
      data_types:
        user_input_required: true
        type: json_string
        description: "The data or assay types contained in this dataset as a json array of strings.  Each is an assay code from https://github.com/hubmapconsortium/search-api/blob/devel/src/search-schema/data/definitions/enums/assay_types.yaml."
      
      # Do we expose the collection_uuids or use the below collections property?
      collection_uuids:
        transient: true
        type: list
        description: "A list of collection uuids for the collections that this dataset belongs to. This is used to pass the reference"
        after_create_trigger: link_to_collections
        after_update_trigger: relink_to_collections
        # Joe added
        on_read_trigger: get_dataset_collection_uuids
      # Do we also need the below?
      collections:
        transient: true
        generated: true
        type: list
        on_read_trigger: get_dataset_collections

      source_uuids:
        transient: true
        type: list
        description: "The uuids of source entities from which this new entity is derived.  Used to pass source entity ids in on POST or PUT calls used to create the linkages."
        on_read_trigger: get_dataset_source_uuids
        # Joe added
        immutable: true # disallow entity update if this property presents
        # Joe added
        after_create_trigger: link_to_ancestors


      published_timestamp:
        type: integer
        description: "The timestamp of when the dataset was published.  The format is an integer representing milliseconds since midnight, Jan 1, 1970.  Cannot be set directly must be set with the /datasets/<id>/publish method."
        immutable: true
        generated: true
        before_create_trigger: set_timestamp
      published_user_displayname:
        type: string
        generated: true
        description: "The name of the authenticated user or process that published the data.  Cannot be set directly must be set with the /datasets/<id>/publish method."
        immutable: true
        before_create_trigger: set_user_displayname
      published_user_sub:
        type: string
        generated: true
        immutable: true
        description: "The subject id as provided by the authorization mechanism for the person or process authenticated when the dataset was publised.  Cannot be set directly must be set with the /datasets/<id>/publish method."
        before_create_trigger: set_user_sub
      published_user_email:
        type: string
        generated: true
        immutable: true
        description: "The email address provided by the authorization mechanism for the person or process authenticated when published.  Cannot be set directly must be set with the /datasets/<id>/publish method."
        before_create_trigger: set_user_email
      pipeline_message:
        #todo: where is this attribute sourced from?  Is it stored in the database? <- Not in neo4j
        type: string
      # The Dataset.data_access_level is based on Dataset.status and Dataset.contains_human_genetic_sequences
      contains_human_genetic_sequences:
        user_input_required: true
        type: boolean
        description: "True if the data contains any human genetic sequence information."
        ingest_metadata:
        type: json_string
        description: "The metadata returned from the processing at data submission time."
      
      local_directory_rel_path:
        # Example: protected/<TMC>/<uuid>
        # Refer to the globus-url call
        type: string
        generated: true
        description: "The path on the local file system, relative to the base data directory, where the data is stored."
        transient: true
        on_read_trigger: get_local_directory_rel_path
      # The Dataset.data_access_level is based on Dataset.status and Dataset.contains_human_genetic_sequences
      status:
        type: string
        description: "The status of the dataset one of Published|New|QA|Error|Hold|Invalid. Cannot be set directly must be set with a PUT /datasets/<id>/<status> method."
        immutable: true
      run_id:
        type: string
      ingest_id:
        type: string
      # Must set in neo4j
      group_uuid:
        type: string
        generated: true
        before_create_trigger: set_group_uuid #method that, if group_uuid is not already set looks for membership in a single "data provider" group and sets to that. Otherwise if not set and no single "provider group" membership throws error
      # Must set in neo4j
      group_name:
        # It's not being mapped in the current version, do we want to map it?
        type: string
        generated: true
        before_create_trigger: set_group_name #same as group_uuid, except set group_name


  ############################################# Donor #############################################
  Donor:
    # Donor can be derivation source but not target
    derivation:
      source: false
      target: true
    properties:
      <<: *shared_properties
      <<: *shared_entity_properties
      # Need `title` property?
      # Deidentified Name?- we're using label (definition below).  For now...
      image_file_metadata:
        type: json_string
        description: "List of uploaded image files and descriptions of the files."
        #todo: migrate to new attribute set as above portal_metadata_upload files
      metadata:
        type: json_string
        description: "Donor metadata coded as described here: <get donor metadata doc from Chuck>"
      protocol_url:
        user_input_required: true
        type: string
        description: "The protocols.io doi url pointing the protocol describing the donor selection, inclusion/exclusion criteria"
      lab_donor_id:
        type: string
        description: "A lab specific identifier for the donor."
      # Will come back from uuid-api together with the uuid and hubmap_id
      submission_id:
        immutable: true
        generated: true
        description: "The hubmap internal id with embedded semantic information e.g.: VAN0003.  This id is generated at creation time which tracks the lab, donor, organ and sample hierarchy per the following: https://docs.google.com/document/d/1DjHgmqWF1VA5-3mfzLFNfabbzmc8KLSG9xWx1DDLlzo/edit?usp=sharing"
        type: string
        before_create_trigger: set_submission_id
      # Must set in neo4j
      group_uuid:
        immutable: true
        generated: true
        type: string
        before_create_trigger: set_group_uuid #method that, if group_uuid is not already set looks for membership in a single "data provider" group and sets to that. Otherwise if not set and no single "provider group" membership throws error.  This field is also used to link (Neo4j relationship) to the correct Lab node on creation.
      # Must set in neo4j
      group_name:
        immutable: true
        generated: true
        type: string
        before_create_trigger: set_group_name
        #todo: map to provenance_group_name in ES - ? In the current version it's not mapped
      portal_metadata_upload_files:
        type: json_string
        description: "list of relative paths to metadata files"
        #todo: migrate to new attribute (set, maybe) representing a single uploaded sample_metadata.tsv file using the now file upload methods.  Leave this in place for now, but add new attribute(s) to support new methon.  Need to do a design session.
      next_identifier:
        type: string
        immutable: true
        description: "Internal count of child samples, used for generating the submission id of the children. This field is not exposed via the api."
        # Do not expose to API result via response
        exposed: false
        #todo: add new yaml attribute, exposed that defaults to true.  When false the attribute is not returned in ws response
      label:
        type: string
        description: "Lab provided, de-identified name for the donor"
      open_consent:
        type: boolean
        descrption: "True if the donor was consented to allow public, open access to any data, identified or not, derived from the donor's tissue.  Otherwise false."


  ############################################# Sample #############################################
  Sample:
    # Sample can be either derivation source or target
    derivation:
      source: true
      target: true
    properties:
      <<: *shared_properties
      <<: *shared_entity_properties
      specimen_type:
        user_input_required: true
        type: string
        description: "A code representing the type of specimen.  Must be one of the codes specified in: https://github.com/hubmapconsortium/search-api/blob/devel/src/search-schema/data/definitions/enums/tissue_sample_types.yaml"
      portal_metadata_upload_files:
        type: json_string
        description: "A list of relative paths to metadata files"
        #todo: migrate to new attribute (set, maybe) representing a single uploaded sample_metadata.tsv file using the now file upload methods.  Leave this in place for now, but add new attribute(s) to support new methon.  Need to do a design session.
      protocol_url:
        type: string
        user_input_required: true
        description: "The protocols.io doi url pointing the protocol under wich the sample was obtained and/or prepared."
      image_file_metadata:
        #todo: migrate to new attribute set as above portal_metadata_upload files
        type: json_string
        description: "A list of uploaded image files and descriptions of the files."
      # Must set in neo4j
      group_uuid:
        immutable: true
        generated: true
        type: string
        before_create_trigger: set_group_uuid #method that, if group_uuid is not already set looks for membership in a single "data provider" group and sets to that. Otherwise if not set and no single "provider group" membership throws error.  This field is also used to link (Neo4j relationship) to the correct Lab node on creation.
      # Must set in neo4j
      group_name:
        immutable: true
        generated: true
        type: string
        before_create_trigger: set_group_name
      sample_count:
        type: string
      organ_other:
        type: string
        description: The organ type provided by the user if "other" organ type is selected
      
      # If source entity provided from user input, why we would want to response 
      # the source_uuid and the ancestor at the same time?
      # ancestor['uuid'] would be the source_uuid, isn't it?
      source_uuid:
        transient: true
        type: string
        description: "The uuid of source entity from which this new entity is derived from. Used on creation or edit to create an action and relationship to the ancestor"
        after_create_trigger: link_to_direct_ancestor
        on_read_trigger: get_sample_source_uuid
        # Joe added
        immutable: true # disallow update if this property presents
      
      ancestor:
        transient: true
        type: dict - object <sample or donor>
        on_read_trigger: get_sample_direct_ancestor
      # No submission_id for Dataset nor Collection
      # Only Donor and Sample have this property
      submission_id:
        immutable: true
        generated: true
        description: "The hubmap internal id with embedded semantic information e.g.: VAN0003-LK-1-10.  This id is generated at creation time which tracks the lab, donor, organ and sample hierarchy per the following: https://docs.google.com/document/d/1DjHgmqWF1VA5-3mfzLFNfabbzmc8KLSG9xWx1DDLlzo/edit?usp=sharing"
        before_create_trigger: set_submission_id
      organ:
        type: string
        description: "Organ code specifier, only set if sample_type == organ.  Valid values found in: https://github.com/hubmapconsortium/search-api/blob/devel/src/search-schema/data/definitions/enums/organ_types.yaml"
      lab_tissue_sample_id:
        type: string
        description: "Lab specific id for the sample."
      next_identifier:
        type: string
        immutable: true
        description: "Internal count of child samples, used for generating the submission id of the children. This field is not exposed via the api."
        # For internal use only
        exposed: false
        #todo: add new yaml attribute, exposed that defaults to true.  When false the attribute is not returned in ws response
      metadata:
        type: json_string
        description: "The sample specific metadata derived from the uploaded sample_metadata.tsv file"
      rui_location:
        type: json_string
        description: "The sample location and orientation in the ancestor organ as specified in the RUI tool."
      specimen_type_other:
        type: string
        description: "The user provided sample type if the 'other' sample_type is chosen."
      visit:
        type: string
        description: "The visit id for the donor/patient when the sample was obtained."

