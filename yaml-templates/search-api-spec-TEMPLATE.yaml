# https://github.com/SmartAPI/smartAPI-Specification/blob/OpenAPI.next/versions/3.0.0.md#specification
openapi: 3.0.0
info:
  description: The HuBMAP Search API is a thin wrapper of the Elasticsearch API. It handles data indexing and reindexing into the backend Elasticsearch. It also accepts the search query and passes through to the Elasticsearch with data access security check.
  version: 1.5.4
  title: HuBMAP Search API
  termsOfService: 'https://hubmapconsortium.org'
  contact:
    email: apiteam@hubmap.org
tags:
  - name: 'Search API, Elasticsearch'
    description: Operations pertaining to datasets indexed in Elasticsearch
  - name: assaytype
    description: Operations pertaining to assay types

externalDocs:
  description: Elasticsearch API Documentation
  url: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html

# Apply the security globally to all operations
security:
  - JWTBearerAuth: []

paths:

  '/assaytype':
    get:
      tags:
        - assaytype
      summary: Get a list of HuBMAP assay type names or descriptive dicts
      operationId: listAssayType
      parameters:
        - name: primary
          in: query
          description: >
             If present and true, restrict list to primary datasets.
             A primary dataset is one for which no parent is a dataset.
             If present and false, restrict list to datasets which are not primary.
          required: false
          schema:
             type: boolean
        - name: simple
          in: query
          description: >
             If present and true, list only assay type names.  Otherwise return a list
             of descriptive dicts.
          required: false
          schema:
             type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: array
                    items:
                       oneOf:
                          - type: string
                          - $ref: '#/components/schemas/AssayTypeReturnDict'
        "400":
          description: The user sent a bad parameter (e.g. a nonexistent group name) or there was a system error
        "401":
          description: User's token is not valid

  '/assaytype/{name}':
    get:
      tags:
        - assaytype
      summary: Get a descriptive dict for a single assay type
      operationId: getAssayType
      parameters:
        - name: primary
          in: query
          description: >
             If present and true, restrict list to primary datasets.
             A primary dataset is one for which no parent is a dataset.
             If present and false, restrict list to datasets which are not primary.
          required: false
          schema:
             type: boolean
        - name: simple
          in: query
          description: >
             If present and true, list only assay type names.  Otherwise return a list
             of descriptive dicts.
          required: false
          schema:
             type: boolean
        - name: name
          in: path
          description: An assay type name or single-word alternate name
          required: true
          schema:
             type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypeReturnDict'
        "400":
          description: The user sent a bad parameter (e.g. a nonexistent group name) or there was a system error
        "401":
          description: User's token is not valid

  '/assayname':
    post:
      tags:
        - assaytype
      summary: Get a descriptive dict for a single assay type
      operationId: postAssayName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayTypeQueryDict'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypeReturnDict'
        "400":
          description: The user sent a bad parameter (e.g. a nonexistent group name) or there was a system error
        "401":
          description: User's token is not valid

  '/indices':
    get:
      tags:
        - indices
      summary: Reindex for a given UUID of dataset.  Use this method to obtain a list of valid indices within the search-api endpoint.  These index names are used in some of the subseqeunt calls made to the endpoint.
      operationId: get-indices
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  indices:
                    example: ["entities", "portal"]
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request. A JSON body and appropriate Content-Type header are required in request
        '401':
          description:  A valid globus token in the `Authorization` header (Bearer scheme) is required in request
        '403':
          description: The globus token used in the `Authorization` header doesn't have the right group access permission

  /search:
    post:
      tags:
        - search
      summary: Execute an Elasticsearch query JSON via HTTP POST and get back search hits that match the query.
      description: <strong>NOTE  This method also accepts a GET call using the same parameters.</strong> To query using a POST or GET, you must supply a query according to the [Request body search](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html#run-request-body-search) rules.
      operationId: search-post
      requestBody:
        description: Request JSON of Elasticsearch query
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestJsonBody'
            example: {
  "query": {
    "bool": {
      "must": [
        {
          "match_phrase": {
            "donor.group_name": "Vanderbilt TMC"
          }
        }
      ],
      "filter": [
        {
          "match": {
            "origin_sample.entity_type": "Sample"
          }
        }
      ]
    }
  }
}
      responses:
        '200':
          description: Returns search hits from backend Elasticsearch that match the query defined in the request JSON
        '400':
          description: Bad request. A JSON body and appropriate Content-Type header are required in request
        '401':
          description:  A valid globus token in the `Authorization` header (Bearer scheme) is required in request
        '403':
          description: The globus token used in the `Authorization` header doesn't have the right group access permission

  /{index_name}/search:
    post:
      tags:
        - search_by_index
      summary: Execute an Elasticsearch query JSON via HTTP POST and get back search hits that match the query.  This call contraints the results to the specified index_name parameter.  Other than that, this call is identical to the /search method.
      description: <strong>NOTE  This method also accepts a GET call using the same parameters.</strong> To query using a POST or GET, you must supply a query according to the [Request body search](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html#run-request-body-search) rules.
      operationId: search-post-by-index
      parameters:
        - name: index_name
          in: path
          description: the name of an existing Elasticsearch index (see the /indices web service call)
          required: true
          schema:
            type: string
      requestBody:
        description: Request JSON of Elasticsearch query
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestJsonBody'
            example: {
  "query": {
    "bool": {
      "must": [
        {
          "match_phrase": {
            "donor.group_name": "Vanderbilt TMC"
          }
        }
      ],
      "filter": [
        {
          "match": {
            "origin_sample.entity_type": "Sample"
          }
        }
      ]
    }
  }
}
      responses:
        '200':
          description: Returns search hits from backend Elasticsearch that match the query defined in the request JSON
        '400':
          description: Bad request. A JSON body and appropriate Content-Type header are required in request
        '401':
          description:  A valid globus token in the `Authorization` header (Bearer scheme) is required in request
        '403':
          description: The globus token used in the `Authorization` header doesn't have the right group access permission

  '/reindex/{identifier}':
    put:
      tags:
        - reindex
      summary: Reindex for a given UUID of dataset
      operationId: reindex
      parameters:
        - name: identifier
          in: path
          description: The unique identifier of collection.  This must be a UUID.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: The request has been accepted and reindex is in process

servers:
  - url: "https://search.api.hubmapconsortium.org"
components:
  securitySchemes:
    globus_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "https://auth.globus.org/v2/oauth2/authorize"
          scopes:
            "write:entities": modify entities
            "read:entities": read entities
    JWTBearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
  schemas:
    requestJsonBody:
      type: object
    AssayTypeQueryDict:
      type: object
      properties:
        name:
          type: string
    AssayTypeReturnDict:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        primary:
          type: boolean
        vitessce-hints:
          type: array
        items:
          type: string
    X-replace-schema:
      schema-file-ref:
        - yaml-templates/donor-schema.yaml
        - yaml-templates/sample-schema.yaml
        - yaml-templates/dataset-schema.yaml
        - yaml-templates/upload-schema.yaml
        - yaml-templates/collections-schema.yaml

